//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public ProjectileBounceShieldListenerComponent projectileBounceShieldListener { get { return (ProjectileBounceShieldListenerComponent)GetComponent(GameComponentsLookup.ProjectileBounceShieldListener); } }
    public bool hasProjectileBounceShieldListener { get { return HasComponent(GameComponentsLookup.ProjectileBounceShieldListener); } }

    public void AddProjectileBounceShieldListener(System.Collections.Generic.List<IProjectileBounceShieldListener> newValue) {
        var index = GameComponentsLookup.ProjectileBounceShieldListener;
        var component = (ProjectileBounceShieldListenerComponent)CreateComponent(index, typeof(ProjectileBounceShieldListenerComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceProjectileBounceShieldListener(System.Collections.Generic.List<IProjectileBounceShieldListener> newValue) {
        var index = GameComponentsLookup.ProjectileBounceShieldListener;
        var component = (ProjectileBounceShieldListenerComponent)CreateComponent(index, typeof(ProjectileBounceShieldListenerComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveProjectileBounceShieldListener() {
        RemoveComponent(GameComponentsLookup.ProjectileBounceShieldListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherProjectileBounceShieldListener;

    public static Entitas.IMatcher<GameEntity> ProjectileBounceShieldListener {
        get {
            if (_matcherProjectileBounceShieldListener == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.ProjectileBounceShieldListener);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherProjectileBounceShieldListener = matcher;
            }

            return _matcherProjectileBounceShieldListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public void AddProjectileBounceShieldListener(IProjectileBounceShieldListener value) {
        var listeners = hasProjectileBounceShieldListener
            ? projectileBounceShieldListener.value
            : new System.Collections.Generic.List<IProjectileBounceShieldListener>();
        listeners.Add(value);
        ReplaceProjectileBounceShieldListener(listeners);
    }

    public void RemoveProjectileBounceShieldListener(IProjectileBounceShieldListener value, bool removeComponentWhenEmpty = true) {
        var listeners = projectileBounceShieldListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveProjectileBounceShieldListener();
        } else {
            ReplaceProjectileBounceShieldListener(listeners);
        }
    }
}
