//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public AnySlotIndexingEventListenerComponent anySlotIndexingEventListener { get { return (AnySlotIndexingEventListenerComponent)GetComponent(GameComponentsLookup.AnySlotIndexingEventListener); } }
    public bool hasAnySlotIndexingEventListener { get { return HasComponent(GameComponentsLookup.AnySlotIndexingEventListener); } }

    public void AddAnySlotIndexingEventListener(System.Collections.Generic.List<IAnySlotIndexingEventListener> newValue) {
        var index = GameComponentsLookup.AnySlotIndexingEventListener;
        var component = (AnySlotIndexingEventListenerComponent)CreateComponent(index, typeof(AnySlotIndexingEventListenerComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceAnySlotIndexingEventListener(System.Collections.Generic.List<IAnySlotIndexingEventListener> newValue) {
        var index = GameComponentsLookup.AnySlotIndexingEventListener;
        var component = (AnySlotIndexingEventListenerComponent)CreateComponent(index, typeof(AnySlotIndexingEventListenerComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveAnySlotIndexingEventListener() {
        RemoveComponent(GameComponentsLookup.AnySlotIndexingEventListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherAnySlotIndexingEventListener;

    public static Entitas.IMatcher<GameEntity> AnySlotIndexingEventListener {
        get {
            if (_matcherAnySlotIndexingEventListener == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.AnySlotIndexingEventListener);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherAnySlotIndexingEventListener = matcher;
            }

            return _matcherAnySlotIndexingEventListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public void AddAnySlotIndexingEventListener(IAnySlotIndexingEventListener value) {
        var listeners = hasAnySlotIndexingEventListener
            ? anySlotIndexingEventListener.value
            : new System.Collections.Generic.List<IAnySlotIndexingEventListener>();
        listeners.Add(value);
        ReplaceAnySlotIndexingEventListener(listeners);
    }

    public void RemoveAnySlotIndexingEventListener(IAnySlotIndexingEventListener value, bool removeComponentWhenEmpty = true) {
        var listeners = anySlotIndexingEventListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveAnySlotIndexingEventListener();
        } else {
            ReplaceAnySlotIndexingEventListener(listeners);
        }
    }
}
