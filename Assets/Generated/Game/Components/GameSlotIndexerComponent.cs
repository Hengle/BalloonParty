//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity slotIndexerEntity { get { return GetGroup(GameMatcher.SlotIndexer).GetSingleEntity(); } }
    public SlotIndexerComponent slotIndexer { get { return slotIndexerEntity.slotIndexer; } }
    public bool hasSlotIndexer { get { return slotIndexerEntity != null; } }

    public GameEntity SetSlotIndexer(System.Collections.Generic.Dictionary<UnityEngine.Vector2Int, Entitas.IEntity> newValue) {
        if (hasSlotIndexer) {
            throw new Entitas.EntitasException("Could not set SlotIndexer!\n" + this + " already has an entity with SlotIndexerComponent!",
                "You should check if the context already has a slotIndexerEntity before setting it or use context.ReplaceSlotIndexer().");
        }
        var entity = CreateEntity();
        entity.AddSlotIndexer(newValue);
        return entity;
    }

    public void ReplaceSlotIndexer(System.Collections.Generic.Dictionary<UnityEngine.Vector2Int, Entitas.IEntity> newValue) {
        var entity = slotIndexerEntity;
        if (entity == null) {
            entity = SetSlotIndexer(newValue);
        } else {
            entity.ReplaceSlotIndexer(newValue);
        }
    }

    public void RemoveSlotIndexer() {
        slotIndexerEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public SlotIndexerComponent slotIndexer { get { return (SlotIndexerComponent)GetComponent(GameComponentsLookup.SlotIndexer); } }
    public bool hasSlotIndexer { get { return HasComponent(GameComponentsLookup.SlotIndexer); } }

    public void AddSlotIndexer(System.Collections.Generic.Dictionary<UnityEngine.Vector2Int, Entitas.IEntity> newValue) {
        var index = GameComponentsLookup.SlotIndexer;
        var component = (SlotIndexerComponent)CreateComponent(index, typeof(SlotIndexerComponent));
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceSlotIndexer(System.Collections.Generic.Dictionary<UnityEngine.Vector2Int, Entitas.IEntity> newValue) {
        var index = GameComponentsLookup.SlotIndexer;
        var component = (SlotIndexerComponent)CreateComponent(index, typeof(SlotIndexerComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveSlotIndexer() {
        RemoveComponent(GameComponentsLookup.SlotIndexer);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherSlotIndexer;

    public static Entitas.IMatcher<GameEntity> SlotIndexer {
        get {
            if (_matcherSlotIndexer == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.SlotIndexer);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherSlotIndexer = matcher;
            }

            return _matcherSlotIndexer;
        }
    }
}
