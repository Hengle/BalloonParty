//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public SlotIndexListenerComponent slotIndexListener { get { return (SlotIndexListenerComponent)GetComponent(GameComponentsLookup.SlotIndexListener); } }
    public bool hasSlotIndexListener { get { return HasComponent(GameComponentsLookup.SlotIndexListener); } }

    public void AddSlotIndexListener(System.Collections.Generic.List<ISlotIndexListener> newValue) {
        var index = GameComponentsLookup.SlotIndexListener;
        var component = (SlotIndexListenerComponent)CreateComponent(index, typeof(SlotIndexListenerComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceSlotIndexListener(System.Collections.Generic.List<ISlotIndexListener> newValue) {
        var index = GameComponentsLookup.SlotIndexListener;
        var component = (SlotIndexListenerComponent)CreateComponent(index, typeof(SlotIndexListenerComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveSlotIndexListener() {
        RemoveComponent(GameComponentsLookup.SlotIndexListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherSlotIndexListener;

    public static Entitas.IMatcher<GameEntity> SlotIndexListener {
        get {
            if (_matcherSlotIndexListener == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.SlotIndexListener);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherSlotIndexListener = matcher;
            }

            return _matcherSlotIndexListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public void AddSlotIndexListener(ISlotIndexListener value) {
        var listeners = hasSlotIndexListener
            ? slotIndexListener.value
            : new System.Collections.Generic.List<ISlotIndexListener>();
        listeners.Add(value);
        ReplaceSlotIndexListener(listeners);
    }

    public void RemoveSlotIndexListener(ISlotIndexListener value, bool removeComponentWhenEmpty = true) {
        var listeners = slotIndexListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveSlotIndexListener();
        } else {
            ReplaceSlotIndexListener(listeners);
        }
    }
}
