//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public AnyBalloonLineInstanceEventListenerComponent anyBalloonLineInstanceEventListener { get { return (AnyBalloonLineInstanceEventListenerComponent)GetComponent(GameComponentsLookup.AnyBalloonLineInstanceEventListener); } }
    public bool hasAnyBalloonLineInstanceEventListener { get { return HasComponent(GameComponentsLookup.AnyBalloonLineInstanceEventListener); } }

    public void AddAnyBalloonLineInstanceEventListener(System.Collections.Generic.List<IAnyBalloonLineInstanceEventListener> newValue) {
        var index = GameComponentsLookup.AnyBalloonLineInstanceEventListener;
        var component = (AnyBalloonLineInstanceEventListenerComponent)CreateComponent(index, typeof(AnyBalloonLineInstanceEventListenerComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceAnyBalloonLineInstanceEventListener(System.Collections.Generic.List<IAnyBalloonLineInstanceEventListener> newValue) {
        var index = GameComponentsLookup.AnyBalloonLineInstanceEventListener;
        var component = (AnyBalloonLineInstanceEventListenerComponent)CreateComponent(index, typeof(AnyBalloonLineInstanceEventListenerComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveAnyBalloonLineInstanceEventListener() {
        RemoveComponent(GameComponentsLookup.AnyBalloonLineInstanceEventListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherAnyBalloonLineInstanceEventListener;

    public static Entitas.IMatcher<GameEntity> AnyBalloonLineInstanceEventListener {
        get {
            if (_matcherAnyBalloonLineInstanceEventListener == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.AnyBalloonLineInstanceEventListener);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherAnyBalloonLineInstanceEventListener = matcher;
            }

            return _matcherAnyBalloonLineInstanceEventListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public void AddAnyBalloonLineInstanceEventListener(IAnyBalloonLineInstanceEventListener value) {
        var listeners = hasAnyBalloonLineInstanceEventListener
            ? anyBalloonLineInstanceEventListener.value
            : new System.Collections.Generic.List<IAnyBalloonLineInstanceEventListener>();
        listeners.Add(value);
        ReplaceAnyBalloonLineInstanceEventListener(listeners);
    }

    public void RemoveAnyBalloonLineInstanceEventListener(IAnyBalloonLineInstanceEventListener value, bool removeComponentWhenEmpty = true) {
        var listeners = anyBalloonLineInstanceEventListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveAnyBalloonLineInstanceEventListener();
        } else {
            ReplaceAnyBalloonLineInstanceEventListener(listeners);
        }
    }
}
