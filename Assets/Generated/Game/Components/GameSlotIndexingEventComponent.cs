//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public SlotIndexingEventComponent slotIndexingEvent { get { return (SlotIndexingEventComponent)GetComponent(GameComponentsLookup.SlotIndexingEvent); } }
    public bool hasSlotIndexingEvent { get { return HasComponent(GameComponentsLookup.SlotIndexingEvent); } }

    public void AddSlotIndexingEvent(UnityEngine.Vector2Int newValue) {
        var index = GameComponentsLookup.SlotIndexingEvent;
        var component = (SlotIndexingEventComponent)CreateComponent(index, typeof(SlotIndexingEventComponent));
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceSlotIndexingEvent(UnityEngine.Vector2Int newValue) {
        var index = GameComponentsLookup.SlotIndexingEvent;
        var component = (SlotIndexingEventComponent)CreateComponent(index, typeof(SlotIndexingEventComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveSlotIndexingEvent() {
        RemoveComponent(GameComponentsLookup.SlotIndexingEvent);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherSlotIndexingEvent;

    public static Entitas.IMatcher<GameEntity> SlotIndexingEvent {
        get {
            if (_matcherSlotIndexingEvent == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.SlotIndexingEvent);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherSlotIndexingEvent = matcher;
            }

            return _matcherSlotIndexingEvent;
        }
    }
}
