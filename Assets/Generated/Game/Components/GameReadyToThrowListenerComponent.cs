//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public ReadyToThrowListenerComponent readyToThrowListener { get { return (ReadyToThrowListenerComponent)GetComponent(GameComponentsLookup.ReadyToThrowListener); } }
    public bool hasReadyToThrowListener { get { return HasComponent(GameComponentsLookup.ReadyToThrowListener); } }

    public void AddReadyToThrowListener(System.Collections.Generic.List<IReadyToThrowListener> newValue) {
        var index = GameComponentsLookup.ReadyToThrowListener;
        var component = (ReadyToThrowListenerComponent)CreateComponent(index, typeof(ReadyToThrowListenerComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceReadyToThrowListener(System.Collections.Generic.List<IReadyToThrowListener> newValue) {
        var index = GameComponentsLookup.ReadyToThrowListener;
        var component = (ReadyToThrowListenerComponent)CreateComponent(index, typeof(ReadyToThrowListenerComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveReadyToThrowListener() {
        RemoveComponent(GameComponentsLookup.ReadyToThrowListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherReadyToThrowListener;

    public static Entitas.IMatcher<GameEntity> ReadyToThrowListener {
        get {
            if (_matcherReadyToThrowListener == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.ReadyToThrowListener);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherReadyToThrowListener = matcher;
            }

            return _matcherReadyToThrowListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public void AddReadyToThrowListener(IReadyToThrowListener value) {
        var listeners = hasReadyToThrowListener
            ? readyToThrowListener.value
            : new System.Collections.Generic.List<IReadyToThrowListener>();
        listeners.Add(value);
        ReplaceReadyToThrowListener(listeners);
    }

    public void RemoveReadyToThrowListener(IReadyToThrowListener value, bool removeComponentWhenEmpty = true) {
        var listeners = readyToThrowListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveReadyToThrowListener();
        } else {
            ReplaceReadyToThrowListener(listeners);
        }
    }
}
