//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public BalloonLastColorPopCountListenerComponent balloonLastColorPopCountListener { get { return (BalloonLastColorPopCountListenerComponent)GetComponent(GameComponentsLookup.BalloonLastColorPopCountListener); } }
    public bool hasBalloonLastColorPopCountListener { get { return HasComponent(GameComponentsLookup.BalloonLastColorPopCountListener); } }

    public void AddBalloonLastColorPopCountListener(System.Collections.Generic.List<IBalloonLastColorPopCountListener> newValue) {
        var index = GameComponentsLookup.BalloonLastColorPopCountListener;
        var component = (BalloonLastColorPopCountListenerComponent)CreateComponent(index, typeof(BalloonLastColorPopCountListenerComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceBalloonLastColorPopCountListener(System.Collections.Generic.List<IBalloonLastColorPopCountListener> newValue) {
        var index = GameComponentsLookup.BalloonLastColorPopCountListener;
        var component = (BalloonLastColorPopCountListenerComponent)CreateComponent(index, typeof(BalloonLastColorPopCountListenerComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveBalloonLastColorPopCountListener() {
        RemoveComponent(GameComponentsLookup.BalloonLastColorPopCountListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherBalloonLastColorPopCountListener;

    public static Entitas.IMatcher<GameEntity> BalloonLastColorPopCountListener {
        get {
            if (_matcherBalloonLastColorPopCountListener == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.BalloonLastColorPopCountListener);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherBalloonLastColorPopCountListener = matcher;
            }

            return _matcherBalloonLastColorPopCountListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public void AddBalloonLastColorPopCountListener(IBalloonLastColorPopCountListener value) {
        var listeners = hasBalloonLastColorPopCountListener
            ? balloonLastColorPopCountListener.value
            : new System.Collections.Generic.List<IBalloonLastColorPopCountListener>();
        listeners.Add(value);
        ReplaceBalloonLastColorPopCountListener(listeners);
    }

    public void RemoveBalloonLastColorPopCountListener(IBalloonLastColorPopCountListener value, bool removeComponentWhenEmpty = true) {
        var listeners = balloonLastColorPopCountListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveBalloonLastColorPopCountListener();
        } else {
            ReplaceBalloonLastColorPopCountListener(listeners);
        }
    }
}
