//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public ForwardComponent forward { get { return (ForwardComponent)GetComponent(GameComponentsLookup.Forward); } }
    public bool hasForward { get { return HasComponent(GameComponentsLookup.Forward); } }

    public void AddForward(UnityEngine.Vector3 newValue) {
        var index = GameComponentsLookup.Forward;
        var component = (ForwardComponent)CreateComponent(index, typeof(ForwardComponent));
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceForward(UnityEngine.Vector3 newValue) {
        var index = GameComponentsLookup.Forward;
        var component = (ForwardComponent)CreateComponent(index, typeof(ForwardComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveForward() {
        RemoveComponent(GameComponentsLookup.Forward);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherForward;

    public static Entitas.IMatcher<GameEntity> Forward {
        get {
            if (_matcherForward == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.Forward);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherForward = matcher;
            }

            return _matcherForward;
        }
    }
}
