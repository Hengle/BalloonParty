//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public MovableListenerComponent movableListener { get { return (MovableListenerComponent)GetComponent(GameComponentsLookup.MovableListener); } }
    public bool hasMovableListener { get { return HasComponent(GameComponentsLookup.MovableListener); } }

    public void AddMovableListener(System.Collections.Generic.List<IMovableListener> newValue) {
        var index = GameComponentsLookup.MovableListener;
        var component = (MovableListenerComponent)CreateComponent(index, typeof(MovableListenerComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceMovableListener(System.Collections.Generic.List<IMovableListener> newValue) {
        var index = GameComponentsLookup.MovableListener;
        var component = (MovableListenerComponent)CreateComponent(index, typeof(MovableListenerComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveMovableListener() {
        RemoveComponent(GameComponentsLookup.MovableListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherMovableListener;

    public static Entitas.IMatcher<GameEntity> MovableListener {
        get {
            if (_matcherMovableListener == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.MovableListener);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherMovableListener = matcher;
            }

            return _matcherMovableListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public void AddMovableListener(IMovableListener value) {
        var listeners = hasMovableListener
            ? movableListener.value
            : new System.Collections.Generic.List<IMovableListener>();
        listeners.Add(value);
        ReplaceMovableListener(listeners);
    }

    public void RemoveMovableListener(IMovableListener value, bool removeComponentWhenEmpty = true) {
        var listeners = movableListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveMovableListener();
        } else {
            ReplaceMovableListener(listeners);
        }
    }
}
